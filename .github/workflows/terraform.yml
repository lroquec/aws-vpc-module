name: Terraform Validation

# Ensure only one workflow runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:

  push:

  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  AWS_REGION: us-east-1
  PYTHON_VERSION: "3.12"
  TERRAFORM_VERSION: "1.10.0"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.release.outputs.should_release }}
    steps:
      - uses: actions/checkout@v4
      - id: release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "should_release=true" >> $GITHUB_OUTPUT

  terraform-plan:
    name: terraform
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-${{ github.run_id }}
          audience: sts.amazonaws.com
          
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: terraform Format
        working-directory: examples/basic-usage
        run: terraform fmt -check -recursive

      - name: terraform Init
        working-directory: examples/basic-usage
        run: terraform init

      - name: terraform Validate
        working-directory: examples/basic-usage
        run: terraform validate

      - name: terraform Plan
        working-directory: examples/basic-usage
        run: terraform plan -no-color

  trigger-release:
    needs: [changes, terraform-plan]
    if : ${{ needs.changes.outputs.should_release == 'true' }}
    uses: ./.github/workflows/release.yml
    secrets:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
